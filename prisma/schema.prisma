// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Printer {
  id        String   @id @default(uuid())
  type      String // filament, resin
  brand     String // elegoo, etc
  model     String // saturn 3 ultra, etc
  picture   String // url
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Consumable {
  id        String   @id @default(uuid())
  type      String // filament, resin
  brand     String // voolt3d
  material  String // pla, petg
  model     String? // uso futuro
  color     String? // red
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id              String           @id @default(uuid())
  printerId       String
  consumableId    String
  profileFilament ProfileFilament?
  profileResin    ProfileResin?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model ProfileFilament {
  id                 String  @id @default(uuid())
  profileId          String  @unique
  profile            Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  plateType          String // PEI, Cool, etc.
  bedTemperature     Int // in degrees Celsius
  nozzleTemperature  Int // in degrees Celsius
  maxVolumetricSpeed Float? // in mm/s

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProfileResin {
  id                   String  @id @default(uuid())
  profileId            String  @unique
  profile              Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  layerHeight          Float // in mm
  bottomLayerCount     Int
  bottomExposureTime   Int // in seconds
  exposureTime         Int // in seconds
  transitionLayerCount Int
  restTimeAfterRetract Int? // in seconds

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
